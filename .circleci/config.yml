version: 2.1
orbs:
  cypress: cypress-io/cypress@1.22.0

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Executors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
executors:
  mobile:
    docker:
      - image: cypress/browsers:node12.13.0-chrome78-ff70
    environment:
      # iPhone 6 viewport dimensions
      CYPRESS_VIEWPORT_WIDTH: 375
      CYPRESS_VIEWPORT_HEIGHT: 667

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Commands ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
commands:
  save-partial-coverage-report:
    description: |
      Saves a single possibly partial coverage report by adding it to the
      workspace. This way different CircleCI jobs can run parts of the tests
      and save their results to be merged later.
    parameters:
      coverage-filename:
        type: string
        default: coverage/coverage-final.json
        description: |
          Path to the final coverage JSON file produced by "nyc" tool.
          Typically called "coverage/coverage-final.json"
      label:
        type: string
        default: default
        description: |
          Human name for the coverage file. For example, when saving both Cypress
          and Jest coverage file, use "cypress" and "jest" to have distinct filenames.
    steps:
      # do not crash if the coverage is not found
      # because a particular CI job might not have any tests to run
      # producing no coverage.
      - run: mkdir coverage-part || true
      - run: touch coverage-part/.placeholder-$CIRCLE_WORKFLOW_JOB_ID-index-$CIRCLE_NODE_INDEX || true
      # use unique job id to avoid accidentally overwriting coverage file
      # and in case the build is parallel, use node index too
      - run: cp <<parameters.coverage-filename>> coverage-part/coverage-<<parameters.label>>-$CIRCLE_WORKFLOW_JOB_ID-index-$CIRCLE_NODE_INDEX.json || true
      - run: ls -la coverage-part
      - persist_to_workspace:
          root: ~/
          paths:
            - "project/coverage-part/*"

  store-coverage-report:
    steps:
      - store_artifacts:
          path: coverage
      - run: npx nyc report --reporter=text || true
      - save-partial-coverage-report:
          label: e2e

  merge-coverage-reports:
    description: |
      Merges individual code coverage files using "nyc" tool
      https://github.com/istanbuljs/nyc.
      All individual files should be in the folder "coverage-part"
    steps:
      - run: ls -la .
      - run: ls -la coverage-part || true
      - run: npx nyc merge coverage-part
      - run: mkdir .nyc_output || true
      # storing the combined report in ".nyc_output/out.json"
      # allows other NYC commands to find it right away
      - run: mv coverage.json .nyc_output/out.json
      - run: ls -la .nyc_output

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Jobs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
jobs:
  report-full-coverage:
    description: Merges individual code coverage files and sends combined data to Coveralls.io
    executor: cypress/base-10
    steps:
      - attach_workspace:
          at: ~/
      - merge-coverage-reports
      - run:
          name: Generate Coverage Report
          command: |
            npx nyc report \
              --reporter lcov --reporter text-summary \
              --report-dir coverage
      - store_artifacts:
          path: coverage
      - run:
          name: Send Coverage Report to Coveralls
          command: npm run coveralls || true

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Workflows ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ #
workflows:
  build:
    jobs:
      # Setup
      #  1. Install Cypress
      #  2. Build application
      #  3. Validate types
      #  4. Run server unit-tests
      - cypress/install:
          name: "Setup"
          yarn: true
          executor: cypress/browsers-chrome78-ff70
          build: "npm run build"
          post-steps:
            - run:
                name: Check Types
                command: yarn types
            - run:
                name: Run Unit Tests
                command: yarn test:unit

      # Run API tests against backend server
      - cypress/run:
          name: "API Tests"
          requires:
            - Setup
          executor: cypress/browsers-chrome78-ff70
          browser: chrome
          yarn: true
          start: yarn test:ci
          wait-on: "http://localhost:3000"
          record: true
          spec: cypress/tests/api/*
          parallel: true
          parallelism: 4
          group: API
          post-steps:
            - store-coverage-report

      # Run E2E tests in Chrome
      - cypress/run:
          name: "UI Tests - Chrome"
          requires:
            - Setup
          executor: cypress/browsers-chrome78-ff70
          browser: chrome
          yarn: true
          start: yarn test:ci
          wait-on: "http://localhost:3000"
          record: true
          parallel: true
          parallelism: 4
          spec: cypress/tests/ui/*
          group: "UI - Chrome"
          post-steps:
            - store-coverage-report

      # Run E2E tests in Chrome with mobile device viewport
      - cypress/run:
          name: "UI Tests - Chrome - Mobile"
          requires:
            - Setup
          executor: cypress/browsers-chrome78-ff70
          browser: chrome
          yarn: true
          start: yarn test:ci
          wait-on: "http://localhost:3000"
          record: true
          parallel: true
          parallelism: 4
          spec: cypress/tests/ui/*
          group: "UI - Chrome - Mobile"
          config: "viewportWidth=375,viewportHeight=667"
          post-steps:
            - store-coverage-report

      # Run E2E tests in Firefox
      - cypress/run:
          name: "UI Tests - Firefox"
          requires:
            - Setup
          executor: cypress/browsers-chrome78-ff70
          browser: firefox
          yarn: true
          start: yarn test:ci
          wait-on: "http://localhost:3000"
          record: true
          parallel: true
          parallelism: 4
          spec: cypress/tests/ui/*
          group: "UI - Firefox"
          post-steps:
            - store-coverage-report

      # Run E2E tests in Firefox with mobile device viewport
      - cypress/run:
          name: "UI Tests - Firefox - Mobile"
          requires:
            - Setup
          executor: cypress/browsers-chrome78-ff70
          browser: firefox
          yarn: true
          start: yarn test:ci
          wait-on: "http://localhost:3000"
          record: true
          parallel: true
          parallelism: 4
          spec: cypress/tests/ui/*
          group: "UI - Firefox - Mobile"
          config: "viewportWidth=375,viewportHeight=667"
          post-steps:
            - store-coverage-report

      - report-full-coverage:
          name: "Report Code Coverage"
          requires:
            - "API Tests"
            - "UI Tests - Chrome"
            - "UI Tests - Chrome - Mobile"
            - "UI Tests - Firefox"
            - "UI Tests - Firefox - Mobile"
